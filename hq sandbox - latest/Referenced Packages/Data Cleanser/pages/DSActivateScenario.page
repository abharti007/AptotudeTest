<apex:page controller="sds.clsScenarioList"  action="{!PageLoad}" title="My Data Shield Rules"  tabStyle="Data_Shield__tab">
 
  <script type="text/javascript">
  function setObjectName()
  {
    alert("Yes");
   }

  </script>
            
 
    
  <apex:sectionHeader title="Stratus" subtitle="Activate Scenario"/>
 <apex:form id="frmMyDSRules">
 
 <apex:actionPoller rerender="frmMyDSRules" interval="15"/>
 
  {!CheckCurrentBatchStatus}
 
 <apex:pageMessages ></apex:pageMessages>
    <apex:pageBlock helpTitle="Data Cleanser Help" helpUrl="https://stratuscloudsolutions.secure.force.com/HelpDataCleanser" >
    <apex:PageBlockButtons >
    <apex:commandButton action="{!showCreateMasterRule}" value="New" />
    
  
    

     <apex:commandButton action="{!ResetClick}" value="Stop Activation" />
           <apex:commandButton action="{!CancelClick}" value="Back to Main Screen" />
    </apex:PageBlockButtons>
     <apex:pageblocksection columns="4">
             
                
             
        </apex:pageblocksection>
        <apex:pageBlockSection columns="2">            
            <apex:pageBlockSectionItem ><div align="right">Please select the Object you wish to make changes to:</div></apex:pageBlockSectionItem>
            <apex:pageBlockSectionItem >
                <apex:selectList value="{!selectedObject}" id="cbxlevel2" size="1">
                    <apex:selectOptions value="{!objectNames}"/>
                    <apex:actionSupport rerender="filterList2" status="outStatus" event="onchange" action="{!ShowMasterRuleListByType}"/>
                </apex:selectList> 
            </apex:pageBlockSectionItem>  
        </apex:pageBlockSection>   
        
        <apex:pageBlockSection columns="1">            
            <apex:pageBlockSectionItem >
           Before you can activate any scenario, you must first de-activate any active scenario by selecting the 'De-Activate' Button next to the Active scenario. Once the scenario is de-activated, then you can select the 'Activate' Button  and this will delete all current duplicate groups for the object, will create new duplicate groups and will make rules Active for any new records added to the database.  Once the groups have been created they will appear in the "Duplicates Groups' Tab.
           <b>In the 'Duplicates Groups' tab, click on the 'Group Name' to merge the records.</b>       
            </apex:pageBlockSectionItem>  
        </apex:pageBlockSection>   

        <apex:pageblocksection columns="1" title="{!selectedObject}" id="filterList2" rendered="{!not(isnull(ObjectType))}">
          <apex:outputPanel id="in">
           <apex:actionStatus startText="Updating...." id="outStatus">
             <apex:facet name="stop">            
                <apex:pageBlockTable value="{!MasterRuleListByType}" var="o" rendered="{!NOT(ISNULL(MasterRuleListByType))}">
                    <apex:inputHidden value="{!o.id}"/>
                    <apex:inputHidden value="{!o.sds__ObjectType__c}"/>    
                    <apex:inputhidden value="{!o.sds__EnabledStatus__c}"/>                    
                    <apex:column headerValue="Status">                    
                        <apex:outputText rendered="{!(o.sds__EnabledStatus__c == 'true')}"> <font color="green"><b>Active</b></font> </apex:outputText>
                        <apex:outputText rendered="{!NOT(o.sds__EnabledStatus__c == 'true')}"> <font color="red"><b>InActive</b></font> </apex:outputText>                    
                    </apex:column>
                    <apex:column value="{!o.sds__RuleName__c}" headerValue="Title" />                                        
                    <apex:column headerValue="Clean Data">                
                        <apex:commandButton value="De-Activate" disabled="{!not(o.sds__Scenario_Activated__c)}" action="{!deleteSavedRefData}" title="Clean Data" onclick="javascript:return askForCleanup('{!o.Id}');"/>
                    </apex:column>
                    <apex:column headerValue="Activate Scenario">                
                        <apex:commandButton action="{!ActivateScenario}" value="Activate" onclick="javascript: return confirmActivate('{!o.Id}');" style="font-weight:bold" 
                        disabled="{!o.sds__Scenario_Activated__c}"  rendered="{!(not(o.sds__Activating_Scenario__c) && not(o.sds__Scenario_Activated__c))}"/>
                        <apex:outputText rendered="{!((o.sds__Activating_Scenario__c) && not(o.sds__Scenario_Activated__c))}"><font color="Blue"><b>{!o.sds__List_Message__c}</b></font></apex:outputText>
                        <apex:outputText rendered="{!(not(o.sds__Activating_Scenario__c) && o.sds__Scenario_Activated__c)}"><font color="green"><b>Activated</b></font> </apex:outputText>
                    </apex:column>                
                      
                      <apex:column headerValue="Edit Scenario">                
                       <apex:commandButton action="{!showEditMasterRule}" onClick="javascript:return confirmActivate('{!o.id}');" value="Edit" />
                    </apex:column>  
                                   
                                     
                    <apex:column headerValue="Delete Scenario">                
                        <apex:commandButton action="{!DeleteScenario}"  value="Delete" onclick="javascript: return confirmDelete('{!o.Id}');" style="font-weight:bold"/>
                    </apex:column>                    
                </apex:pageBlockTable>                            
            </apex:facet>
           </apex:actionStatus> 
          </apex:outputPanel>              
        </apex:pageBlockSection>
    </apex:pageBlock>
    
    <apex:inputHidden value="{!MasterRule}" id="hMasterRule"/>
    <apex:inputHidden value="{!SelectedId}" id="hSelectedId"/>
    
    <script type="text/javascript">
        function MasterRuleDetails(userMasterId)
        {                    
            document.getElementById("{!$Component.hMasterRule}").value = userMasterId;            
            return true;
        }
        function confirmDelete(delid)
        {
            document.getElementById("{!$Component.hSelectedId}").value = delid;
            return true;
            //var answer = confirm("Are you sure you want to delete this scenario?");            
            //if(answer==true){
            //    document.getElementById("{!$Component.hSelectedId}").value = delid;
            //    return true;
            //}else{       
            //    return false;            
            //}
        }
        function confirmActivate(actid)
        {
            document.getElementById("{!$Component.hMasterRule}").value = actid;
            return true;               
            //var answer = confirm("Would you like Data Shield to search your SF.com database to look for duplicates using your defined scenario?");
            //if(answer){            
            //    document.getElementById("{!$Component.hMasterRule}").value = actid;
            //    return true;               
            //} else {       
            //    return false;
            //}
        }
        function askForGrouping(actid)
        {
            document.getElementById("{!$Component.hMasterRule}").value = actid;
            return true;
            //if (window.confirm('Would you like Data Shield to store duplicate reference data.?')) 
            //{
                //alert("This process will take a few minutes. Once complete you will find all your matching duplicates in the 'Matching Duplicate Tab'");
            //}
            return false;
        } 
        function askForCleanup(actid)
        {
            document.getElementById("{!$Component.hMasterRule}").value = actid;                
            return true;
            //if (window.confirm('Would you like Data Shield to delete duplicate reference data.?')) 
            //{
                //alert("This process will take a few minutes. Once complete you will find activate button enabled again for the active scenario in 'Edit Scenario'");
            //}
            return false;
        }        
    </script>    
 </apex:form>    
</apex:page>